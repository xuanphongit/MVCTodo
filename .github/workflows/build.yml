name: Build and Package

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build application
      run: dotnet build --configuration Release --no-restore
      
    - name: Run tests (if any)
      run: dotnet test --configuration Release --no-build --verbosity normal
      continue-on-error: true
      
    - name: Create Web Deploy Package
      run: |
        dotnet msbuild Todo.csproj `
          /p:Configuration=Release `
          /p:Platform="Any CPU" `
          /p:WebPublishMethod=Package `
          /p:PackageAsSingleFile=true `
          /p:PackageLocation=artifacts/TodoApp.${{ github.run_number }}.zip `
          /p:IncludeSetParameters=true `
          /p:ParametersXmlFile=Parameters.xml `
          /t:WebPublish
          
    - name: Copy setParameters files
      run: |
        if (!(Test-Path "artifacts")) { New-Item -ItemType Directory -Path "artifacts" }
        Copy-Item "parameters/*.xml" "artifacts/"
        
    - name: Create build info
      run: |
        $buildInfo = @{
          PackageName = "TodoApp.${{ github.run_number }}"
          Version = "${{ github.run_number }}"
          BuildDate = (Get-Date).ToString("yyyy-MM-dd HH:mm:ss")
          Configuration = "Release"
          GitCommit = "${{ github.sha }}"
          Branch = "${{ github.ref_name }}"
          Workflow = "${{ github.workflow }}"
        }
        $buildInfo | ConvertTo-Json | Out-File "artifacts/build-info.json"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: TodoApp-Package-${{ github.run_number }}
        path: artifacts/
        retention-days: 30
        
    - name: List artifacts
      run: |
        Write-Host "Artifacts created:" -ForegroundColor Green
        Get-ChildItem artifacts/ | ForEach-Object {
          Write-Host "  - $($_.Name) ($([math]::Round($_.Length/1MB, 2)) MB)" -ForegroundColor Gray
        }